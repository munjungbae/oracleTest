--EMPLOYEES 를 복사해서 EMP03 으로 테이블 생성
CREATE TABLE EMP03
AS
SELECT * FROM EMPLOYEES;

SELECT * FROM EMP03;

ROLLBACK;

--모든사원의 부서번호를 30으로 설정
UPDATE EMP03 SET DEPARTMENT_ID = 30; 
--모든 사원의 급여를 10% 인상
UPDATE EMP03 SET SALARY = SALARY + (SALARY * 0.1);
--모든 사원의 입사일을 오늘로 수정
UPDATE EMP03 SET HIRE_DATE = SYSDATE;
--부서 번호가 10번인 사원의 부서번호를 30번으로 수정
UPDATE EMP03
SET DEPARTMENT_ID = 30
WHERE DEPARTMENT_ID = 10;

SELECT * FROM EMP03 WHERE DEPARTMENT_ID = 10;
--급여가 3000만원이상인 사람을 급여 10% 인상
UPDATE EMP03
SET SALARY = SALARY + (SALARY*0.1)
WHERE SALARY >= 3000;
--입사일이 2007년인 사원을 오늘로 수정
UPDATE EMP03
SET HIRE_DATE = SYSDATE
WHERE HIRE_DATE LIKE '07/%%/%%';
--입사일이 2007년인 사원을 오늘로 수정
UPDATE EMP03
SET HIRE_DATE = SYSDATE
WHERE SUBSTR(HIRE_DATE,1,2) = '07';
--이름이 SUSAN인 사람의 부서번호는20, 직급은 F1_MGR 로 변경
UPDATE EMP03
SET DEPARTMENT_ID = 20, JOB_ID = 'FI_MGR'
WHERE UPPER(FIRST_NAME) LIKE UPPER('SUSAN');

SELECT * FROM EMP03 WHERE UPPER(FIRST_NAME) = UPPER('SUSAN');
-- LAST NAME 이 RUSSELL인 사람의 급여를 17000, 커미션비율을 0.45로 인상
UPDATE EMP03
SET SALARY = 17000, COMMISSION_PCT = 0.45
WHERE UPPER(LAST_NAME) LIKE UPPER('RUSSELL');

SELECT * FROM EMP03 WHERE UPPER(LAST_NAME) LIKE UPPER('RUSSELL');

ROLLBACK;

--30번 부서를 삭제
DELETE FROM EMP03 WHERE DEPARTMENT_ID LIKE 30;

--테이블 생성
CREATE TABLE MY_CUSTOMER (
    CUSTOMER_CODE VARCHAR2(7),
    CUSTOMER_NAME VARCHAR2(10) NOT NULL,
    GENDER CHAR(1) NOT NULL,
    BIRTHDAY VARCHAR(8) NOT NULL,
    TEL VARCHAR(16)
    );
--제약조건 설정
ALTER TABLE MY_CUSTOMER ADD CONSTRAINT MY_CUSTOMER_CODE_PK PRIMARY KEY(CUSTOMER_COD);
ALTER TABLE MY_CUSTOMER ADD CONSTRAINT MY_CUSTOMER_GENDER CHECK(GENDER IN('M','W'));
ALTER TABLE MY_CUSTOMER ADD CONSTRAINT MY_CUSTOMRR_TEL_UK UNIQUE(TEL);


--제약조건 검색기능
SELECT * FROM USER_CONSTRAINTS; -- 제약조건 출력 --WHERE TABLE_NAME LIKE 'MY_CUSTOMER';
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME LIKE 'MY_CUSTOMER';
SELECT * FROM USER_TABLES; -- 제약조건의 테이블 출력
SELECT * FROM USER_CONS_COLUMNS; -- 제약조건의 컬럼 정보 출력
--테이블 삭제
DROP TABLE MY_CUSTOMER;
--테이블 검색
SELECT * FROM MY_CUSTOMER;
SELECT * FROM CUSTOMER;

--테이블 값 입력
INSERT INTO MY_CUSTOMER
VALUES ('2017108','박승대','M','19711430','010-2580-9919');
INSERT INTO MY_CUSTOMER
VALUES ('2019302','전미래','W','19740812','010-8864-0232');

--MERGE MY_CUSTOMER - > CUSTOMER 병합을 진행 없으면 INSERT, 있다면 UPDATE 
MERGE INTO CUSTOMER C
    USING MY_CUSTOMER M 
    ON (C.CUSTOMER_CODE = M.CUSTOMER_CODE)
    WHEN MATCHED THEN
        UPDATE 
        SET C.CUSTOMER_NAME = M.CUSTOMER_NAME, C.GENDER = M.GENDER, C.BIRTHDAY = M.BIRTHDAY, C.TEL = M.TEL
    WHEN NOT MATCHED THEN
        INSERT (C.CUSTOMER_CODE, C.CUSTOMER_NAME, C.GENDER, C.BIRTHDAY, C.TEL) 
        VALUES(M.CUSTOMER_CODE, M.CUSTOMER_NAME, M.GENDER, M.BIRTHDAY, M.TEL);
    
--머지를 위한 제약조건 해제
ALTER TABLE CUSTOMER DROP CONSTRAINT CUSTOMER_EMAIL_UK;

--테이블 내 행 내용변경
UPDATE MY_CUSTOMER 
SET CUSTOMER_NAME = '박승우'
WHERE CUSTOMER_CODE = '2017108';


--부서 테이블과 사원 테이블 작성후 관계설정하기
CREATE TABLE DEPT01 (
    NO NUMBER(5),
    NAME VARCHAR2(10) NOT NULL,
    REGION VARCHAR2(10) NOT NULL    
)
ALTER TABLE DEPT01 ADD CONSTRAINT D_NO_PK PRIMARY KEY(NO);

INSERT INTO DEPT01 VALUES(10,'ACCOUNTING','NEW YORK');
INSERT INTO DEPT01 VALUES(20,'RESEARCH','DALLAS');
INSERT INTO DEPT01 VALUES(30,'SALES','CHICAGO');
INSERT INTO DEPT01 VALUES(40,'OPERATIONS','BOSTON');

CREATE TABLE STAFF (
    NO NUMBER(5),
    NAME VARCHAR2(10) NOT NULL,
    JOB VARCHAR2(4) NOT NULL,
    DEPT_NO NUMBER(5)
)
ALTER TABLE STAFF ADD CONSTRAINT S_NO_PK PRIMARY KEY(NO);
ALTER TABLE STAFF ADD CONSTRAINT S_DEPT_NO_FK FOREIGN KEY(DEPT_NO) REFERENCES DEPT01(NO);

INSERT INTO STAFF VALUES(7499,'ALLEN','SALESMAN',30);
INSERT INTO STAFF VALUES(7522,'MUN','MANAGER',50);
INSERT INTO STAFF VALUES(7566,'JONES','MANAGER',40);
--외래키 참조하고 있을 때 삭제하기.
DELETE FROM STAFF WHERE NO LIKE 7566;
DELETE FROM DEPT01 WHERE NO LIKE 40;
--제약조건풀기 
ALTER TABLE STAFF DROP CONSTRAINT S_DEPT_NO_FK;
--CASCADE 활용
ALTER TABLE STAFF ADD CONSTRAINT S_DEPT_NO_FK FOREIGN KEY(DEPT_NO) REFERENCES DEPT01(NO) ON DELETE CASCADE;

SELECT * FROM STAFF;
SELECT * FROM DEPT01;

ROLLBACK;

--문제1번
DROP TABLE EMP01;
CREATE TABLE EMP01 (
    EMPNO NUMBER(4), --PK
    ENAME VARCHAR2(10) NOT NULL,
    JOB VARCHAR2(9),
    MANAGER NUMBER(4),
    HIREDATE DATE NOT NULL,
    SALARY NUMBER(7,2) DEFAULT 0.0 NOT NULL,
    COMMISSION NUMBER(7,2) DEFAULT 0.0,
    DEPTNO NUMBER(2) NOT NULL
)
ALTER TABLE EMP01 ADD CONSTRAINT EMP01_EMPNO_PK PRIMARY KEY(EMPNO);
INSERT INTO EMP01 VALUES (7369,'SMITH','CLEAK',7836,'80/12/17',800.0,NULL,20);
INSERT INTO EMP01 VALUES (7499,'ALLEN','SALESMAN',7369,'87/12/20',1600.0,300.0,30);
INSERT INTO EMP01 VALUES (7839,'KING','PRESIDENT',NULL,'81/02/08',5000.0,NULL,10);

SELECT * FROM EMP01;

CREATE TABLE MEMBERS(
    ID VARCHAR2(20), --PK
    NAME VARCHAR2(20) NOT NULL,
    REGNO VARCHAR2(14) NOT NULL,
    PHONE VARCHAR2(13) NOT NULL,
    ADDRESS VARCHAR2(100) NOT NULL
)
ALTER TABLE MEMBERS ADD CONSTRAINT M_ID_PK PRIMARY KEY(ID);
INSERT INTO MEMBERS
VALUES('ster12390','문정배','981002-1000000','010-1234-5678','경기도 평택시 비전3로');
SELECT * FROM MEMBERS;

CREATE TABLE BOOKS(
    CODE NUMBER(4),
    TITLE VARCHAR2(50) NOT NULL,
    COUNT NUMBER(6) NOT NULL,
    PRICE NUMBER(10) NOT NULL,
    PUBLISH VARCHAR2(50) NOT NULL
)
ALTER TABLE BOOKS ADD CONSTRAINT B_CODE_PK PRIMARY KEY(CODE);
INSERT INTO BOOKS
VALUES(0001,'소나기',50,7000,'맑은소리');
SELECT * FROM BOOKS;
-----------------------------
CREATE TABLE DELI_CUSTOMER(
    CODE NUMBER(5), --PK
    NAME VARCHAR2(20) NOT NULL,
    ADDRESS VARCHAR2(50),
    TEL VARCHAR(20)
);
ALTER TABLE DELI_CUSTOMER ADD CONSTRAINT DELI_CODE_PK PRIMARY KEY(CODE);
INSERT INTO DELI_CUSTOMER 
VALUES (00001,'문정배','평택시','010-1234-5678');
SELECT * FROM DELI_CUSTOMER;

CREATE TABLE RESTAURANT(
    NAME VARCHAR2(20),--PK
    TYPE VARCHAR2(20) NOT NULL,
    FOOD VARCHAR2(10),--PK
    PRICE NUMBER(10)--PK
);
ALTER TABLE RESTAURANT ADD CONSTRAINT R_NAME_FOOD_PRICE_PK PRIMARY KEY(NAME,FOOD,PRICE);
INSERT INTO RESTAURANT 
VALUES ('파스타집','양식','투움바파스타','14000');
SELECT * FROM RESTAURANT;

CREATE TABLE DELIVERY(
    CODE NUMBER(5), --PK,FK
    NAME VARCHAR2(20), --FK
    FOOD VARCHAR2(10), --FK
    PRICE NUMBER(10),--FK
    TIME VARCHAR2(10) NOT NULL
);
ALTER TABLE DELIVERY ADD CONSTRAINT D_CODE_PK PRIMARY KEY(CODE); -- 식별관계??
ALTER TABLE DELIVERY ADD CONSTRAINT D_CODE_FK FOREIGN KEY(CODE) REFERENCES DELI_CUSTOMER(CODE) ON DELETE CASCADE; 
ALTER TABLE DELIVERY ADD CONSTRAINT D_NAME_FOOD_PRICE_FK FOREIGN KEY(NAME,FOOD,PRICE) REFERENCES RESTAURANT(NAME,FOOD,PRICE) ON DELETE CASCADE;-- 비식별관계??
INSERT INTO DELIVERY 
VALUES (00001,'파스타집','투움바파스타','14000','40분');
SELECT * FROM DELIVERY;

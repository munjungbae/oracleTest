create or replace NONEDITIONABLE PROCEDURE EMP_PROC2
(VWORD IN VARCHAR2)
IS
    VEMP_ROWTYPE EMPLOYEES%ROWTYPE;
    CURSOR CURSOR_NAME(VWORD VARCHAR2)
    IS 
    SELECT * FROM EMPLOYEES WHERE UPPER(FIRST_NAME) LIKE UPPER('%'||VWORD||'%');
BEGIN
    FOR VEMP_ROWTYPE IN CURSOR_NAME(VWORD) LOOP
        DBMS_OUTPUT.PUT_LINE(VEMP_ROWTYPE.FIRST_NAME||' / '||VEMP_ROWTYPE.SALARY);
    END LOOP;
END;
/
--프로시저 출력
EXECUTE EMP_PROC2('U');

SHOW ERROR;

--SELECT * FROM USER_SOURCE;

--DATA DICTIONARY 명령어들
--USER_TABLES
--USER_CONSTRAINTS
--USER_CONS_COLUMNS
--USER_IND_COLUMNS
--USER_VIEWS
--USER_INDEXES
--USER_SEQUENCE
--USER_SOURCE


--부서별 월급을 인상하는 프로그램 (10번부서 10%, 20번부서 20%, 나머지는 동결)
DROP TABLE EMP01;

CREATE TABLE EMP01
AS SELECT * FROM EMPLOYEES WHERE 1=1;

SELECT * FROM EMP01;

CREATE OR REPLACE PROCEDURE EMP01_PROC
(VDEPTNO IN EMP01.DEPARTMENT_ID%TYPE)
IS
BEGIN
    IF(VDEPTNO = 10) THEN
        UPDATE EMP01 
        SET SALARY = SALARY * 1.1 
        WHERE DEPARTMENT_ID = VDEPTNO;
        DBMS_OUTPUT.PUT_LINE(VDEPTNO||'부서 전원 10% 인상 완료했습니다');
    ELSIF(VDEPTNO = 20) THEN
        UPDATE EMP01 
        SET SALARY = SALARY * 1.2
        WHERE DEPARTMENT_ID = VDEPTNO;
        DBMS_OUTPUT.PUT_LINE(VDEPTNO||'부서 전원 20% 인상 완료했습니다');
    ELSE
        DBMS_OUTPUT.PUT_LINE('10번,20번 부서만 월급 인상 대상입니다.');
    END IF;
END;
/

EXECUTE EMP01_PROC(20);

SELECT * FROM EMP01 WHERE DEPARTMENT_ID = 20;


--프로시저를 통해 사원번호를 입력하면 이름, 연봉, 직책을 매개변수를 통해 반환한다.
CREATE OR REPLACE PROCEDURE EMP_PROCCEDURE_OUTMODE(
    VEMPNO IN EMPLOYEES.EMPLOYEE_ID%TYPE,
    VNAME OUT EMPLOYEES.FIRST_NAME%TYPE,
    VSALARY OUT EMPLOYEES.SALARY%TYPE,
    VJOBID OUT EMPLOYEES.JOB_ID%TYPE
)
IS
BEGIN
    SELECT FIRST_NAME, SALARY, JOB_ID INTO VNAME, VSALARY, VJOBID 
    FROM EMPLOYEES WHERE EMPLOYEE_ID = VEMPNO;
END;
/

DECLARE
    VEMP_ROWTYPE EMPLOYEES%ROWTYPE;
BEGIN
    EMP_PROCCEDURE_OUTMODE( 200,
    VEMP_ROWTYPE.FIRST_NAME,
    VEMP_ROWTYPE.SALARY,
    VEMP_ROWTYPE.JOB_ID
    );  
    DBMS_OUTPUT.PUT_LINE(VEMP_ROWTYPE.FIRST_NAME);
    DBMS_OUTPUT.PUT_LINE(VEMP_ROWTYPE.SALARY);
    DBMS_OUTPUT.PUT_LINE(VEMP_ROWTYPE.JOB_ID);

END;
/

--프로시저를 워크시트에서 불러서 사용
VARIABLE VNAME VARCHAR2(100)
VARIABLE VSALARY NUMBER
VARIABLE VJOBID VARCHAR2(100)

EXECUTE EMP_PROCCEDURE_OUTMODE(100, :VNAME, :VSALARY, :VJOBID);
PRINT VNAME;
PRINT VSALARY;
PRINT VJOBID;

--프로시저 인아웃모드 동시사용
CREATE OR REPLACE PROCEDURE PROCEDURE_INOUTMOD(
    VSALARY IN OUT VARCHAR2/*크기지정 X */
)
IS
BEGIN
--   VSALARY := TO_CHAR(VSALARY, '$999,999,999');
   VSALARY := '$' || SUBSTR(VSALARY, -9, 3)  || ','|| SUBSTR(VSALARY, -6, 3) ||','||SUBSTR(VSALARY, -3, 3);
END;
/

DECLARE
    VSALARY VARCHAR2(20) := '123456789';
BEGIN
    PROCEDURE_INOUTMOD(VSALARY);
    DBMS_OUTPUT.PUT_LINE('VSALSRY = ' || VSALARY);
END;
/
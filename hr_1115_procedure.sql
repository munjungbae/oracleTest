create or replace NONEDITIONABLE PROCEDURE EMP_PROC2
(VWORD IN VARCHAR2)
IS
    VEMP_ROWTYPE EMPLOYEES%ROWTYPE;
    CURSOR CURSOR_NAME(VWORD VARCHAR2)
    IS 
    SELECT * FROM EMPLOYEES WHERE UPPER(FIRST_NAME) LIKE UPPER('%'||VWORD||'%');
BEGIN
    FOR VEMP_ROWTYPE IN CURSOR_NAME(VWORD) LOOP
        DBMS_OUTPUT.PUT_LINE(VEMP_ROWTYPE.FIRST_NAME||' / '||VEMP_ROWTYPE.SALARY);
    END LOOP;
END;
/
--프로시저 출력
EXECUTE EMP_PROC2('U');

SHOW ERROR;

--SELECT * FROM USER_SOURCE;

--DATA DICTIONARY 명령어들
--USER_TABLES
--USER_CONSTRAINTS
--USER_CONS_COLUMNS
--USER_IND_COLUMNS
--USER_VIEWS
--USER_INDEXES
--USER_SEQUENCE
--USER_SOURCE


--부서별 월급을 인상하는 프로그램 (10번부서 10%, 20번부서 20%, 나머지는 동결)
DROP TABLE EMP01;

CREATE TABLE EMP01
AS SELECT * FROM EMPLOYEES WHERE 1=1;

SELECT * FROM EMP01;

CREATE OR REPLACE PROCEDURE EMP01_PROC
(VDEPTNO IN EMP01.DEPARTMENT_ID%TYPE)
IS
BEGIN
    IF(VDEPTNO = 10) THEN
        UPDATE EMP01 
        SET SALARY = SALARY * 1.1 
        WHERE DEPARTMENT_ID = VDEPTNO;
        DBMS_OUTPUT.PUT_LINE(VDEPTNO||'부서 전원 10% 인상 완료했습니다');
    ELSIF(VDEPTNO = 20) THEN
        UPDATE EMP01 
        SET SALARY = SALARY * 1.2
        WHERE DEPARTMENT_ID = VDEPTNO;
        DBMS_OUTPUT.PUT_LINE(VDEPTNO||'부서 전원 20% 인상 완료했습니다');
    ELSE
        DBMS_OUTPUT.PUT_LINE('10번,20번 부서만 월급 인상 대상입니다.');
    END IF;
END;
/

EXECUTE EMP01_PROC(20);

SELECT * FROM EMP01 WHERE DEPARTMENT_ID = 20;
--트리거 테스트
DROP TABLE EMP01;

CREATE TABLE EMP01(
    EMPNO NUMBER(4) PRIMARY KEY,
    ENAME VARCHAR2(20),
    JOB VARCHAR2(50)
);

DESC EMP01;

CREATE OR REPLACE TRIGGER EMP01_TRIGGER
    AFTER INSERT ON EMP01
    FOR EACH ROW
BEGIN
    DBMS_OUTPUT.PUT_LINE(:NEW.EMPNO || ', ' || :NEW.ENAME || ' 신입사원');
END;
/

INSERT INTO EMP01 VALUES((SELECT NVL(MAX(EMPNO), 0)+1 FROM EMP01), DBMS_RANDOM.STRING('U', 4), 'IT_DEV');
--(SELECT NVL(MAX(EMPNO), 0)+1 FROM EMP01) << 0부터 1씩 자동으로 증가하는 서브쿼리값, EMPNO가 널이니까 0이 들어가고 +1이 진행되어 1, EMPNO가 1이니까 +1이 진행되어 2 ... 이런식으로 +1씩 증가

CREATE TABLE SAL01(
    SALNO NUMBER(4),
    SAL NUMBER,
    EMPNO NUMBER(4)
    );
ALTER TABLE SAL01 ADD CONSTRAINT SAL01_PK PRIMARY KEY(SALNO);
ALTER TABLE SAL01 ADD CONSTRAINT SAL01_FK FOREIGN KEY(EMPNO) REFERENCES EMP01(EMPNO);

SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'SAL01';

CREATE SEQUENCE SAL01_SEQ
START WITH 1
INCREMENT BY 1
MINVALUE 1
MAXVALUE 100000
NOCYCLE
CACHE 2;

CREATE OR REPLACE TRIGGER EMP01_TRIGGER2
AFTER INSERT ON EMP01
FOR EACH ROW
BEGIN
    INSERT INTO SAL01 VALUES (SAL01_SEQ.NEXTVAL, 1000000, :NEW.EMPNO);
    DBMS_OUTPUT.PUT_LINE(:NEW.EMPNO || '번호 사원이 입력 완료되었습니다');
END;
/

INSERT INTO EMP01 VALUES((SELECT NVL(MAX(EMPNO), 0)+1 FROM EMP01), DBMS_RANDOM.STRING('U', 4), 'IT_DEV');
SELECT * FROM EMP01;
SELECT * FROM SAL01;


--EMP01에서 사원의 정보를 제거 했을 때 SAL01에 해당되는 사원의 정보가 삭제되도록 프로그램

CREATE OR REPLACE TRIGGER EMP01_TRIGGER3
    AFTER DELETE ON EMP01
    FOR EACH ROW
BEGIN 
    --SAL01에 해당되는 번호 삭제
    DELETE FORM SAL01 WHERE EMPNO = :OLD.EMPNO;
     DBMS_OUTPUT.PUT_LINE( :OLD.EMPNO || '번호 사원이 삭제 되었습니다.');
END;
/

DELETE FROM EMP01 WHERE EMP01 = 1;